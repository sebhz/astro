. $ASTRO_SH_LIB_PATH/util

DT_SECS_PER_DAY=86400

_hms_to_jfrac()
{
    local _h=$1 # Hours
    local _m=$2 # Minutes
    local _s=$3 # Seconds

    bc -l <<< "($_h*3600+$_m*60+$_s)/$DT_SECS_PER_DAY"
}

# Return Julian day from Y,M,D (D is decimal)
# @Meeus 7.1
# Only gregorian calendar considered
dt_jd_from_ymd()
{
    local _Y=$1 # Year
    local _M=$2 # Month
    local _D=$3 # Day

    if [ $_M -lt 3 ]
    then
        _Y=$((_Y-1))
        _M=$((_M+12))
    fi
    local _A=$(bc -l <<< "scale=0; $_Y/100")
    local _B=$(bc -l <<< "scale=0; 2-$_A+$_A/4")
    bc -l <<< "s=scale; scale=0; tmp=365.25*($_Y+4716)/1+(30.6001*($_M+1))/1; scale=s;tmp+$_D+$_B-1524.5"
}

# Return Julian day from date string (obtained by 'date +"%Y %m %d %H %M %S"')
dt_jd_from_date()
{
    local _jfrac=$(_hms_to_jfrac $4 $5 $6)
    local _D=$(bc -l <<< "$3+$_jfrac")
    echo $(dt_jd_from_ymd $1 $2 $_D) 
}

# Return Julian ephemeris date from date string (obtained by 'date +"%Y %m %d %H %M %S"')
dt_jde_from_date()
{
    local _jd=$(dt_jd_from_date $1 $2 $3 $4 $5 $6)
    local _deltaT=$(dt_get_deltat $1 $2)
    bc -l <<< "$_jd+$_deltaT/$DT_SECS_PER_DAY"
}

# Return current Julian date
dt_jd_current()
{
    echo $(dt_jd_from_date $(date +"%Y %m %d %H %M %S"))
}

# Return time in Julian centuries since J2000 epoch
# @ Meeus 12.1
dt_j2000_t()
{
    local _jd=$1        # Julian day
    bc -l <<< "($_jd-2451545.0)/36525"
}
    
# Return mean sidereal time at greenwich
# @Meeus 12.4
dt_mean_sidereal_greenwich()
{
    local _jd=$1        # Julian day
    local _T=$(dt_j2000_t $_jd)
    bc -l <<< "deg_reduce(280.46061837+360.98564736629*($_jd-2451545.0) \
               + 0.000387933*$_T*$_T - $_T*$_T*$_T/38710000)"
}

# Get local hour angle at a given longitude of 
# a body whose right ascension is alpha
# @Meeus 13
dt_get_local_hour_angle() {
    local _jd=$1        # Julian day
    local _longitude=$2 # Observer's longitude
    local _alpha=$3     # Right ascension of body
    
    local _sid=$(dt_mean_sidereal_greenwich $_jd)
    bc -l <<< "$_sid - $_longitude - $_alpha"
}

# Get deltaT (difference between UT and DT)
# https://eclipse.gsfc.nasa.gov/SEhelp/deltatpoly2004.html
# Only implement the 2005-2050 part
# See also Meeus, chapter 10
dt_get_deltat() {
    local _Y=$1 # Year
    local _M=$2 # Month

    local _y=$(echo "$_Y + ($_M - 0.5)/12" | bc -l)
    local _t=$(echo "$_y - 2000" | bc -l)
    bc -l <<< "62.92+0.32217*$_t+0.005589*$_t*$_t"
}

# Test jd
dt_test_jd()
{
    # @Meeus 7.a
    local v=$(dt_jd_from_ymd 1957 10 4.81)
    ut_assert $v 2436116.31 7.a
    # @Meeus 7.b - skipped because Julian
    echo "7.b: SKIP"
    # @Meeus p.62
    local v=$(dt_jd_from_ymd 2000 01 1.5)
    ut_assert $v 2451545.0 "621"
    local v=$(dt_jd_from_ymd 1999 01 1.0)
    ut_assert $v 2451179.5 "622"
}

# Test sidereal time
dt_test_sidereal_time()
{
    # @Meeus 12.a
    local v=$(dt_mean_sidereal_greenwich $(dt_jd_from_date 1987 04 10 0 0 0))
    ut_assert $(echo "scale=6; $v/1" | bc -l) $(echo "scale=6;13*15 + 10*15/60 + 46.3668*15/3600" | bc -l) 12.a
    # @Meeus 12b
    local v=$(dt_mean_sidereal_greenwich $(dt_jd_from_date 1987 04 10 19 21 0))
    ut_assert $(echo "scale=6; $v/1" | bc -l) 128.737873 12.b
}
